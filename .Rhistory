vmeste <- merge(gdp, edu, by = "CountryCode")
dim(vmeste)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "vopros3_1.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "vopros3_2.csv")
gdp <- fread.csv("vopros3_1.csv", skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total")))
edu <- fread.csv("vopros3_2.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "vopros3_1.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "vopros3_2.csv")
gdp <- fread("vopros3_1.csv", skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total")))
edu <- fread("vopros3_2.csv")
vmeste <- merge(gdp, edu, by = "CountryCode")
dim(vmeste)
gdp <- fread("vopros3_1.csv", skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
edu <- fread("vopros3_2.csv")
vmeste <- merge(gdp, edu, by = "CountryCode")
dim(vmeste)
arrange(vmeste, desc(Rank))
library(dplyr)
library(data.table)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "vopros3_1.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "vopros3_2.csv")
gdp <- fread("vopros3_1.csv", skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
edu <- fread("vopros3_2.csv")
vmeste <- merge(gdp, edu, by = "CountryCode")
vmeste <- arrange(vmeste, desc(Rank))
dim(vmeste)
head(vmeste)
dim(vmeste)
vmeste(13, )
vmeste[13, ]
head(all,13)[33]
head(vmeste,13)[33]
names(gdp)
gdp <- fread("vopros3_1.csv")
names(gdp)
unique(all$`Income Group`)
unique(vmeste$`Income Group`)
tapply(vmeste$Rank, all$`Income Group`, mean)
tapply(vmeste$Rank, vmeste$`Income Group`, mean)
library(Hmisc)
vmeste$RankGroups <- cut2(vmeste$Rank, g=5)
table(vmeste$RankGroups, vmeste$`Income Group`)
install.packages(xtable)
install.packages("xtable")
setwd("C:/Users/Admin/Documents/DS from Coursera/5 Reproducible Research/CourseProject1")
activity.data <- read.csv("activity.csv")
library(dplyr)
week.days <- weekdays(as.Date(strptime(activity.data$date, format = "%Y-%m-%d")))
week.days <- replace(week.days, week.days=="суббота" | week.days=="воскресенье", "weekend")
week.days <- replace(week.days, !week.days=="weekend", "weekday")
activity.data <- cbind(week.days, activity.data$interval, activity.data$steps)
names(activity.data) <- c("weekday", "interval", "steps")
head(activity.data)
weekday.data <- subset(activity.data, week.days=="weekday")
weekend.data <- subset(activity.data, week.days=="weekend")
activity.data$date <- weekdays(as.Date(strptime(activity.data$date, format = "%Y-%m-%d")))
activity.data <- read.csv("activity.csv")
activity.data$date <- weekdays(as.Date(strptime(activity.data$date, format = "%Y-%m-%d")))
activity.data$date <- replace(week.days, week.days=="суббота" | week.days=="воскресенье", "weekend")
activity.data$date <- replace(week.days, !week.days=="weekend", "weekday")
str(activity.data)
steps.interval.weekday.average <- summarise(group_by(activity.data, date + interval),
steps=mean(steps, na.rm = TRUE))
activity.data <- group_by(activity.data, interval, date)
activity.data <- summarise(activity.data, steps=mean(steps, na.rm = TRUE))
str(activity.data)
library("ggplot")
library("ggplot2")
ggplot(activity.data, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps by weekday", x = "Interval",
y = "Average number of steps") +
facet_wrap(~datetype, ncol = 1, nrow=2)
ggplot(activity.data, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps by weekday", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
activity.data <- read.csv("activity.csv")
is.na(activity.data$steps)
sum(is.na(activity.data$steps))
sum(is.na(activity.data$steps))/nrow(activity.data)
which.na(activity.data$steps)
is.na(activity.data$steps)
which(is.na(activity.data$steps))
str(which(is.na(activity.data$steps)))
steps.interval.average <- summarise(group_by(activity.data, interval),
steps=mean(steps, na.rm = TRUE))
missing.lines <- which(is.na(activity.data$steps))
steps.interval.average[missing.lines, ]
steps.interval.average[missing.lines, 2]
missing.lines <- which(is.na(activity.data$steps))
imputed.nas <- steps.interval.average[missing.lines, 2]
transform(activity.data, steps = ifelse(is.na(activity.data$steps), yes = imputed_nas, no = activity.data$steps))
imputed.nas <- steps.interval.average[missing.lines, 2]
transform(activity.data, steps = ifelse(is.na(activity.data$steps), yes = imputed.nas, no = activity.data$steps))
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = imputed.nas, no = activity.data$steps))
str(activity.data.no.nas)
sum(is.na(activity.data.no.nas$steps))
steps.daily.total.no.nas <-  summarise(group_by(activity.data.no.nas, date), steps=sum(steps))
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = imputed.nas, no = activity.data$steps))
steps.daily.total.no.nas <-  summarise(group_by(activity.data.no.nas, date), steps=sum(steps))
activity.data <- read.csv("activity.csv")
library(dplyr)
missing.lines <- which(is.na(activity.data$steps))
imputed.nas <- steps.interval.average[missing.lines, 2]
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = imputed.nas, no = activity.data$steps))
steps.daily.total.no.nas <-  summarise(group_by(activity.data.no.nas, date), steps=sum(steps))
setwd("C:/Users/Admin/Documents/DS from Coursera/5 Reproducible Research/CourseProject1")
activity.data <- read.csv("activity.csv")
library(dplyr)
steps.daily.total <-  summarise(group_by(activity.data, date), steps=sum(steps))
hist(steps.daily.total$steps, breaks = seq(0,25000, by=2500), ylim = c(0,20),
main="Total steps per day distribution", xlab = "Steps per day")
hist(steps.daily.total$steps, breaks = seq(0,25000, by=2500), ylim = c(0,20), col = "blue",
main="Total steps per day distribution", xlab = "Steps per day")
hist(steps.daily.total$steps/1000, breaks = seq(0,25, by=2.5), ylim = c(0,20), col = "blue",
main="Total steps per day distribution", xlab = "Steps per day")
hist(steps.daily.total$steps/1000, breaks = seq(0,25, by=2.5), ylim = c(0,20), col = "blue",
main="Total steps per day distribution", xlab = "Thousand steps per day")
mean(steps.daily.total$steps, na.rm = TRUE)
median(steps.daily.total$steps, na.rm = TRUE)
steps.interval.average <- summarise(group_by(activity.data, interval),
steps=mean(steps, na.rm = TRUE))
plot(steps.interval.average$interval, steps.interval.average$steps,
type = "l", xlab="Interval",
ylab="Average number of steps",
main="Average number of steps per interval")
steps.interval.average[which.max(steps.interval.average$steps), 1]
sum(is.na(activity.data$steps))/nrow(activity.data)
sum(is.na(activity.data$steps))/nrow(activity.data)*100 + "percent"
c(sum(is.na(activity.data$steps))/nrow(activity.data)*100, "percent")
c( round( sum(is.na(activity.data$steps))/nrow(activity.data)*100, digits = 1), "percent")
paste( round( sum(is.na(activity.data$steps))/nrow(activity.data)*100, digits = 1), "percent")
missing.lines <- which(is.na(activity.data$steps))
imputed.nas <- steps.interval.average[missing.lines, 2]
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = imputed.nas, no = activity.data$steps))
steps.daily.total.no.nas <-  summarise(group_by(activity.data.no.nas, date), steps=sum(steps))
head(activity.data.no.nas)
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = imputed.nas, no = activity.data$steps))
sum(is.na(activity.data.no.nas$steps)
sum(is.na(activity.data.no.nas$steps))
steps.daily.total.no.nas <-  summarise(group_by(activity.data.no.nas, date), steps=sum(steps))
group_by(activity.data.no.nas, date)
summarise(group_by(activity.data.no.nas, date), steps=sum(steps))
str(activity.data.no.nas)
str(activity.data)
head(activity.data)
str(activity.data.no.nas)
library(Hmisc)
paste( round( sum(is.na(activity.data$steps))/nrow(activity.data)*100, digits = 1), "percent")
missing.lines <- which(is.na(activity.data$steps))
imputed.nas <- steps.interval.average[missing.lines, 2]
for (i=1:nrow(activity.data)) {}
for (i = in missing.lines) { print i}
for (i in missing.lines) { print i}
for (i %in% missing.lines) { print i}
missing.lines <- which(is.na(activity.data$steps))
for (i in missing.lines) { print i}
for (i in missing.lines) {
print(i)
}
sum(is.na(activity.data$steps)
sum(is.na(activity.data$steps))
missing.lines <- which(is.na(activity.data$steps))
nrow(missing.lines)
count(missing.lines)
length(missing.lines)
missing.lines <- which(is.na(activity.data$steps))
imputed.nas <- steps.interval.average[missing.lines, 2]
length(imputed.nas)
imputed.nas <- steps.interval.average[missing.lines, 2]
str(imputed.nas)
length(imputed.nas)
nrow(imputed.nas)
imputed.nas <- steps.interval.average[missing.lines, 2]
class(imputed.nas)
imputed.nas <- as.vector(imputed.nas)
class(imputed.nas)
imputed.nas <- steps.interval.average[missing.lines, 2]
imputed.nas <- steps.interval.average[missing.lines, 2]
head(imputed.nas)
summarise(imputed.nas)
summary(imputed.nas)
sum(is.na(imputed.nas)
sum(is.na(imputed.nas))
summary(steps.interval.average)
missing.lines <- which(is.na(activity.data$steps))
for (i in missing.lines) {
replace(activity.data$steps, i, steps.interval.average[i, 2])
}
summary(activity.data$steps)
missing.lines
head(missing.lines)
activity.data[5, 2]
str(activity.data)
activity.data[5, 1]
str(activity.data)
str(steps.interval.average)
missing.steps <- activity.data[which(is.na(activity.data$steps), ]
missing.steps <- activity.data[which(is.na(activity.data$steps)), ]
nrow(missing.steps)
str(missing.steps)
missing.steps <- activity.data[which(is.na(activity.data$steps)), c(1,3)]
str(missing.steps)
missing.steps <- activity.data[which(is.na(activity.data$steps)), 3]
class(missing.steps)
head(missing.steps)
missing.steps
missing.steps <- activity.data[which(is.na(activity.data$steps)), ]
str(missing.steps)
summary(missing.steps$steps)
imputed_steps <- steps.interval.average$steps[match(activity.data$interval,
steps.interval.average$interval)]
str(imputed_steps)
class(imputed_steps)
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = steps.no.nas,
no = activity.data$steps))
steps.no.nas <- steps.interval.average$steps[match(activity.data$interval,
steps.interval.average$interval)]
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = steps.no.nas,
no = activity.data$steps))
sum(is.na(activity.data.no.nas&steps))
steps.daily.total.no.nas <-  summarise(group_by(activity.data.no.nas, date), steps=sum(steps))
hist(steps.daily.total.no.nas$steps, breaks = seq(0,25000, by=2500), ylim = c(0,20),
main="Total steps per day distribution after missing data imputation",
xlab = "Steps per day")
hist(steps.daily.total.no.nas$steps/1000, breaks = seq(0,25, by=2.5), ylim = c(0,20),
col = "blue", main="Total steps per day distr'n after NAs imputation",
xlab = "Thousand steps per day")
activity.data$date <- weekdays(as.Date(strptime(activity.data.no.nas$date, format = "%Y-%m-%d")))
activity.data$date <- replace(week.days,
week.days=="суббота" | week.days=="воскресенье", "weekend")
activity.data$date <- replace(week.days, !week.days=="weekend", "weekday")
activity.data <- group_by(activity.data.no.nas, interval, date)
activity.data <- summarise(activity.data, steps=mean(steps, na.rm = TRUE))
library("ggplot2")
ggplot(activity.data, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps by weekday", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
activity.data$date <- weekdays(as.Date(strptime(activity.data.no.nas$date, format = "%Y-%m-%d")))
activity.data$date <- replace(week.days,
week.days=="суббота" | week.days=="воскресенье", "weekend")
activity.data.no.nas$date <- weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d")))
week.days <- weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d")))
summary(week.days)
activity.data.no.nas$date <- replace(week.days,
week.days=="суббота" | week.days=="воскресенье", "weekend")
activity.data.no.nas$date <- replace(week.days, !week.days=="weekend", "weekday")
activity.data <- group_by(activity.data.no.nas, interval, date)
activity.data <- summarise(activity.data, steps=mean(steps, na.rm = TRUE))
library("ggplot2")
ggplot(activity.data, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps by weekday", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
library("ggplot2")
ggplot(activity.data, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps by weekday", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
str(activity.data)
week.days <- weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d")))
activity.data.no.nas$date <- replace(week.days,
week.days=="суббота" | week.days=="воскресенье", "weekend")
activity.data.no.nas$date <- replace(week.days, !week.days=="weekend", "weekday")
head(activity.data.no.nas)
activity.data <- read.csv("activity.csv")
steps.interval.average <- summarise(group_by(activity.data, interval),
steps=mean(steps, na.rm = TRUE))
steps.no.nas <- steps.interval.average$steps[match(activity.data$interval,
steps.interval.average$interval)]
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = steps.no.nas,
no = activity.data$steps))
week.days <- weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d")))
activity.data.no.nas$date <- replace(week.days,
week.days=="суббота" | week.days=="воскресенье", "weekend")
activity.data.no.nas$date <- replace(week.days, !week.days=="weekend", "weekday")
activity.data <- group_by(activity.data.no.nas, interval, date)
activity.data <- summarise(activity.data, steps=mean(steps, na.rm = TRUE))
library("ggplot2")
ggplot(activity.data, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps day type", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
str(activity.data)
summary(activity.data$date)
unique(activity.data$date)
week.days <- weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d")))
unique(week.days)
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = steps.no.nas,
no = activity.data$steps))
week.days <- weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d")))
unique(week.days)
week.days
activity.data.no.nas$date
setwd("C:/Users/Admin/Documents/DS from Coursera/5 Reproducible Research/CourseProject1")
activity.data <- read.csv("activity.csv")
library(dplyr)
steps.interval.average <- summarise(group_by(activity.data, interval),
steps=mean(steps, na.rm = TRUE))
steps.no.nas <- steps.interval.average$steps[match(activity.data$interval,
steps.interval.average$interval)]
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = steps.no.nas,
no = activity.data$steps))
unique(activity.data.no.nas$steps)
unique(activity.data.no.nas$date)
week.days <- weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d")))
unique(week.days)
week.days <- replace(week.days,
week.days=="суббота" | week.days=="воскресенье", "weekend")
week.days <- replace(week.days, !week.days=="weekend", "weekday")
str(activity.data.no.nas)
activity.data.no.nas$date <- suppress.warnings(weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d"))))
activity.data.no.nas$date <- suppressWarnings(weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d"))))
activity.data.no.nas$date <- replace(week.days,
week.days=="суббота" | week.days=="воскресенье", "weekend")
activity.data.no.nas$date <- replace(week.days, !week.days=="weekend", "weekday")
unique(activity.data.no.nas$date)
activity.date.interval.total <- summarise(group_by(activity.data.no.nas, interval, date),
steps=mean(steps, na.rm = TRUE))
library("ggplot2")
ggplot(activity.data, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps day type", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
head(activity.date.interval.total)
ggplot(activity.date.interval.total, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps day type", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
##The original data was downloaded
```{r}
[here] souce.url
```
##The original data was downloaded [here] (souce.url)
library(ggplot2)
#1 Code for reading in the dataset and/or processing the data
setwd("C:/Users/Admin/Documents/DS from Coursera/5 Reproducible Research/CourseProject1")
activity.data <- read.csv(".\activity.csv")
activity.data <- read.csv("./activity.csv")
library(dplyr)
steps.interval.average <- summarise(group_by(activity.data, interval),
steps=mean(steps, na.rm = TRUE))
steps.no.nas <- steps.interval.average$steps[match(activity.data$interval,
steps.interval.average$interval)]
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = steps.no.nas,
no = activity.data$steps))
steps.daily.total.no.nas <-  summarise(group_by(activity.data.no.nas, date), steps=sum(steps))
activity.data.no.nas$date <- suppressWarnings(weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d"))))
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
week.days=="суббота" | week.days=="воскресенье", "weekend")
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
activity.data.no.nas$date=="суббота" |
activity.data.no.nas$date=="воскресенье",
"weekend")
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
!activity.data.no.nas$date=="weekend", "weekday")
activity.date.interval.total <- summarise(group_by(activity.data.no.nas, interval, date),
steps=mean(steps, na.rm = TRUE))
library(ggplot2)
ggplot(activity.date.interval.total, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps day type", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
activity.data.no.nas$date <- suppressWarnings(weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d"))))
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
activity.data.no.nas$date=="суббота" |
activity.data.no.nas$date=="воскресенье",
"weekend")
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
!activity.data.no.nas$date=="weekend", "weekday")
activity.date.interval.total <- summarise(group_by(activity.data.no.nas, interval, date),
steps=mean(steps, na.rm = TRUE))
ggplot(activity.date.interval.total, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps day type", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
activity.data.no.nas$date <- suppressWarnings(weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d"))))
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
activity.data.no.nas$date=="суббота" |
activity.data.no.nas$date=="воскресенье",
"weekend")
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
!activity.data.no.nas$date=="weekend", "weekday")
activity.date.interval.total <- summarise(group_by(activity.data.no.nas, interval, date),
steps=mean(steps, na.rm = TRUE))
library(ggplot2)
ggplot(activity.date.interval.total, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps day type", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
activity.data.no.nas$date <- suppressWarnings(weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d"))))
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
activity.data.no.nas$date=="суббота" |
activity.data.no.nas$date=="воскресенье",
"weekend")
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
!activity.data.no.nas$date=="weekend", "weekday")
activity.date.interval.total <- summarise(group_by(activity.data.no.nas, interval, date),
steps=mean(steps, na.rm = TRUE))
ggplot(activity.date.interval.total, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps day type", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
library(ggplot2)
ggplot(activity.date.interval.total, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps day type", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
str(activity.date.interval.total)
activity.data.no.nas$date <- suppressWarnings(weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d"))))
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
activity.data.no.nas$date=="суббота" |
activity.data.no.nas$date=="воскресенье",
"weekend")
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
!activity.data.no.nas$date=="weekend", "weekday")
activity.date.interval.total <- summarise(group_by(activity.data.no.nas, interval, date),
steps=mean(steps, na.rm = TRUE))
unique(activity.date.interval.total$date)
activity.data <- read.csv("./activity.csv")
activity.data <- read.csv("./activity.csv")
library(dplyr)
steps.daily.total <-  summarise(group_by(activity.data, date), steps=sum(steps))
hist(steps.daily.total$steps/1000, breaks = seq(0,25, by=2.5), ylim = c(0,20), col = "blue",
main="Total steps per day distribution", xlab = "Thousand steps per day")
mean(steps.daily.total$steps, na.rm = TRUE)
median(steps.daily.total$steps, na.rm = TRUE)
steps.interval.average <- summarise(group_by(activity.data, interval),
steps=mean(steps, na.rm = TRUE))
plot(steps.interval.average$interval, steps.interval.average$steps,
type = "l", xlab="Interval",
ylab="Average number of steps",
main="Average number of steps per interval")
steps.interval.average[which.max(steps.interval.average$steps), 1]
paste(round(sum(is.na(activity.data$steps))/nrow(activity.data)*100, digits = 1), "percent")
steps.no.nas <- steps.interval.average$steps[match(activity.data$interval,
steps.interval.average$interval)]
activity.data.no.nas <- transform(activity.data,
steps = ifelse(is.na(activity.data$steps),
yes = steps.no.nas,
no = activity.data$steps))
steps.daily.total.no.nas <-  summarise(group_by(activity.data.no.nas, date), steps=sum(steps))
hist(steps.daily.total.no.nas$steps/1000, breaks = seq(0,25, by=2.5), ylim = c(0,20),
col = "blue", main="Total steps per day distr'n after NAs imputation",
xlab = "Thousand steps per day")
activity.data.no.nas$date <- suppressWarnings(weekdays(as.Date(strptime(activity.data.no.nas$date,
format = "%Y-%m-%d"))))
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
activity.data.no.nas$date=="суббота" |
activity.data.no.nas$date=="воскресенье",
"weekend")
activity.data.no.nas$date <- replace(activity.data.no.nas$date,
!activity.data.no.nas$date=="weekend", "weekday")
activity.date.interval.total <- summarise(group_by(activity.data.no.nas, interval, date),
steps=mean(steps, na.rm = TRUE))
library(ggplot2)
activity.date.interval.total$date
ggplot(activity.date.interval.total, aes(x = interval, y = steps, color = date)) +
geom_line() +
labs(title = "Average daily steps day type", x = "Interval",
y = "Average number of steps") +
facet_wrap(~date, ncol = 1, nrow=2)
